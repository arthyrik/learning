apiVersion: v1
kind: Service
metadata:
  name: song-app-service
  namespace: k8s-program
spec:
  type: NodePort
  selector:
    app: song-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30100

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: song-app-deployment
  namespace: k8s-program
  labels:
    app: song-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: song-app
  template:
    metadata:
      namespace: k8s-program
      labels:
        app: song-app
    spec:
      containers:
        - name: song-app
          image: song-service
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres-user
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres-password
            - name: SERVER_PORT
              value: '8080'
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-configs
                  key: song-db-url
          volumeMounts:
            - mountPath: "/storage"
              name: node-storage
      volumes:
        - name: node-storage
          persistentVolumeClaim:
            claimName: pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: song-db-service
  namespace: k8s-program
spec:
  type: ClusterIP
  selector:
    app: song-db
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: song-db-statefulset
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: song-db
  serviceName: song-db
  template:
    metadata:
      labels:
        app: song-db
    spec:
      containers:
        - name: song-db
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres-password
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: app-configs
                  key: song-db-name
          volumeMounts:
            - name: song-db-storage
              mountPath: /data
  volumeClaimTemplates:
    - metadata:
        name: song-db-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "hostpath"
        resources:
          requests:
            storage: 1Gi
